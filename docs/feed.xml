<?xml version="1.0" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sogo.dev</title>
    <link>https://sogo.dev</link>
    <description>@SogoKatoのブログ。技術系の記事を書きます。</description>
    <language>ja</language>
    <lastBuildDate>Mon, 15 May 2023 00:00:00 GMT</lastBuildDate>
    <atom:link href="https://sogo.dev/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CeleryにおけるSQLAlchemyのセッション管理</title>
      <link>https://sogo.dev/posts/2023/05/celery-sqlalchemy</link>
      <guid>https://sogo.dev/posts/2023/05/celery-sqlalchemy</guid>
      <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
      <description> 前回の記事では SQLAlchemy の Session について解説しました。今回はその応用として、Celery においてどのように Session を管理するかを考えたいと思います。

関連記事：
* SQLAlchemyのセッション・トランザクションを理解する
* SQLAlchemyで'M</description>
    </item>
    <item>
      <title>SQLAlchemyのセッション・トランザクションを理解する</title>
      <link>https://sogo.dev/posts/2023/05/sqlalchemy-sessions-and-transactions</link>
      <guid>https://sogo.dev/posts/2023/05/sqlalchemy-sessions-and-transactions</guid>
      <pubDate>Sun, 14 May 2023 00:00:00 GMT</pubDate>
      <description> SQLAlchemy の Session や scoped_session、トランザクションに関して理解していきます。

## 用語おさらい

### セッション（Session）

SQLAlchemy の Session オブジェクトは、ORM マッピングされたオブジェクトの永続化に関する操作</description>
    </item>
    <item>
      <title>Reactで検索・ソート可能なDataTableを自作する</title>
      <link>https://sogo.dev/posts/2023/04/datatable-react</link>
      <guid>https://sogo.dev/posts/2023/04/datatable-react</guid>
      <pubDate>Sat, 22 Apr 2023 00:00:00 GMT</pubDate>
      <description> 最近、MUI の妹分の UI ライブラリである Joy-UI を使ってます。現在進行形で活発に開発が進んでいて、設計（デザイン）も今時な感じで好感触です。ところどころまだ開発されていないコンポーネントもちらほらあるものの、ドキュメントには代替策がコード付きで載っていてとても親切です。

MUI X</description>
    </item>
    <item>
      <title>Kanikoでコンテナイメージつくるならcache=trueは有効にしておこう</title>
      <link>https://sogo.dev/posts/2023/04/kaniko-cache</link>
      <guid>https://sogo.dev/posts/2023/04/kaniko-cache</guid>
      <pubDate>Tue, 18 Apr 2023 00:00:00 GMT</pubDate>
      <description> !ぜんぜんわからない　俺たちは雰囲気でカニコをやっている

恥ずかしながら、わたしは雰囲気で kaniko にコンテナイメージのビルドをしてもらっていることに気づきました。1年以上 GitLab CI で kaniko を使っておきながら、ただ「特権コンテナを使わずにイメージつくれるやつ」くらいの</description>
    </item>
    <item>
      <title>IPoE回線の自宅のWebサービスをVPN経由で固定IPのクラウドから公開する</title>
      <link>https://sogo.dev/posts/2023/04/reverse-proxy-to-home-ipoe-network</link>
      <guid>https://sogo.dev/posts/2023/04/reverse-proxy-to-home-ipoe-network</guid>
      <pubDate>Sat, 15 Apr 2023 00:00:00 GMT</pubDate>
      <description> PPPoE 回線が遅いので IPoE（IPv4 over IPv6）へ移行しようと思いました。以前は2つのルーターを使って、PPPoE と IPoE の2セッションを張ることができたのですが、ある時からできなくなり、しばらく PPPoE だけで生活していました。とはいえやはり遅い、遅すぎる……とい</description>
    </item>
    <item>
      <title>CKAD受検記録【2023年版】</title>
      <link>https://sogo.dev/posts/2023/03/certified-kubernetes-application-developer</link>
      <guid>https://sogo.dev/posts/2023/03/certified-kubernetes-application-developer</guid>
      <pubDate>Thu, 30 Mar 2023 00:00:00 GMT</pubDate>
      <description> 2023年3月30日に Certified Kubernetes Application Developer (CKAD) を受験し、合格しましたのでその受検記録記事です。ちょうど1年前に Certified Kuberenetes Administrator (CKA) を取っていたので、その続</description>
    </item>
    <item>
      <title>PyScriptを使ってブログのサンプルコードを実行させる</title>
      <link>https://sogo.dev/posts/2023/03/pyscript-codeblock</link>
      <guid>https://sogo.dev/posts/2023/03/pyscript-codeblock</guid>
      <pubDate>Mon, 06 Mar 2023 00:00:00 GMT</pubDate>
      <description> 前回の記事を書くときに WebAssembly でブログのコードブロックのコードを実行させられたら面白いかも、ということで PyScript を使って実装してみました。React &amp; Next.js で使う際の注意点についても書こうと思います。

以下については前提知識としてこの記事では解説しませ</description>
    </item>
    <item>
      <title>Pythonのunittest.mock.patchではどこにパッチするかが重要</title>
      <link>https://sogo.dev/posts/2023/03/python-unittest-mock-where-to-patch</link>
      <guid>https://sogo.dev/posts/2023/03/python-unittest-mock-where-to-patch</guid>
      <pubDate>Sat, 04 Mar 2023 00:00:00 GMT</pubDate>
      <description> Python 公式ドキュメントの unittest.mock のページにドンピシャの内容が書いてありますが、なかなか気づけずにハマってしまっていたのでメモです。

`unittest.mock.patch` でパッチしたけど当たってない気がする人は参考にしてみてください。

下記の引用に要点が凝縮</description>
    </item>
    <item>
      <title>Ansibleでgpg公開鍵とaptのサードパーティリポジトリを追加する ～Terraformをインストールしたい～</title>
      <link>https://sogo.dev/posts/2023/03/ansible-apt-repo-signed-by-gpg-key</link>
      <guid>https://sogo.dev/posts/2023/03/ansible-apt-repo-signed-by-gpg-key</guid>
      <pubDate>Wed, 01 Mar 2023 00:00:00 GMT</pubDate>
      <description> apt を使って docker や terraform をインストールする時など、提供元のサードパーティ apt リポジトリを追加する場合が結構ありますよね。その際に、今までは `apt-key` を使って OpenPGP 公開鍵をインポートしていたのですが、`apt-key` は Debian </description>
    </item>
    <item>
      <title>TerraformでAPI Gatewayのスロットリングを設定する</title>
      <link>https://sogo.dev/posts/2023/02/aws-api-gateway-terraform-throttling-settings</link>
      <guid>https://sogo.dev/posts/2023/02/aws-api-gateway-terraform-throttling-settings</guid>
      <pubDate>Thu, 23 Feb 2023 00:00:00 GMT</pubDate>
      <description> AWS API Gateway のスロットリングを Terraform を使って設定する方法を見つけるまでに少し手間取ったのでメモ。

## AWS マネジメントコンソールでの場所

今回 Terraform で設定するのは、マネジメントコンソールの各ステージの設定画面内の「デフォルトのメソッドス</description>
    </item>
    <item>
      <title>プロセス外依存は統合テストで確認しよう：単体テストの考え方／使い方 第3部</title>
      <link>https://sogo.dev/posts/2023/02/unit-testing-principles-practices-and-patterns-part3</link>
      <guid>https://sogo.dev/posts/2023/02/unit-testing-principles-practices-and-patterns-part3</guid>
      <pubDate>Wed, 22 Feb 2023 00:00:00 GMT</pubDate>
      <description> 『単体テストの考え方／使い方』（Vladimir Khorikov 著、須田智之訳）を読んだので、そのまとめを部ごとに書いていこうと思います。

1. 単体テストの目的・定義・学派・命名について：単体テストの考え方／使い方 第1部
1. リファクタリングしやすいテストを書こう：単体テストの考え方／</description>
    </item>
    <item>
      <title>ビジネス・ロジックと連携の指揮を分離すれば良いテストが書ける：単体テストの考え方／使い方 第2部後半</title>
      <link>https://sogo.dev/posts/2023/02/unit-testing-principles-practices-and-patterns-part2-2</link>
      <guid>https://sogo.dev/posts/2023/02/unit-testing-principles-practices-and-patterns-part2-2</guid>
      <pubDate>Sun, 19 Feb 2023 00:00:00 GMT</pubDate>
      <description> 『単体テストの考え方／使い方』（Vladimir Khorikov 著、須田智之訳）を読んでいるので、そのまとめを部ごとに書いていこうと思います。

1. 単体テストの目的・定義・学派・命名について：単体テストの考え方／使い方 第1部
1. リファクタリングしやすいテストを書こう：単体テストの考え</description>
    </item>
    <item>
      <title>FastAPIとSQLAlchemy2.0ならもう型ヒントを諦めなくていい</title>
      <link>https://sogo.dev/posts/2023/02/fastapi-orm-sqlalchemy</link>
      <guid>https://sogo.dev/posts/2023/02/fastapi-orm-sqlalchemy</guid>
      <pubDate>Wed, 08 Feb 2023 00:00:00 GMT</pubDate>
      <description> サチコ（Google Search Console）を眺めていたら `FastAPI MySQL` がそれなりに需要ありそうと思ったので、FastAPI と SQLAlchemy を組み合わせて ORM を使う方法を紹介したいと思います。最近の SQLAlchemy（1.4以降）ではマッピングされ</description>
    </item>
    <item>
      <title>TypedDictはdictのsubtypeではないので関数の引数にはMappingを使う</title>
      <link>https://sogo.dev/posts/2023/02/typeddict-is-not-subtype-of-dict</link>
      <guid>https://sogo.dev/posts/2023/02/typeddict-is-not-subtype-of-dict</guid>
      <pubDate>Mon, 06 Feb 2023 00:00:00 GMT</pubDate>
      <description> Python の dict（辞書）を TypeScript の interface のように扱えて便利な TypedDict ですが、**dict のサブクラスではない**というのが少し落とし穴だなと思ったのでメモ。

## まずは PEP を見よう

大抵のことは公式ドキュメントを見れば書いてあ</description>
    </item>
    <item>
      <title>リファクタリングしやすいテストを書こう：単体テストの考え方／使い方 第2部前半</title>
      <link>https://sogo.dev/posts/2023/02/unit-testing-principles-practices-and-patterns-part2-1</link>
      <guid>https://sogo.dev/posts/2023/02/unit-testing-principles-practices-and-patterns-part2-1</guid>
      <pubDate>Sat, 04 Feb 2023 00:00:00 GMT</pubDate>
      <description> 『単体テストの考え方／使い方』（Vladimir Khorikov 著、須田智之訳）を読んでいるので、そのまとめを部ごとに書いていこうと思います。

1. 単体テストの目的・定義・学派・命名について：単体テストの考え方／使い方 第1部
1. リファクタリングしやすいテストを書こう：単体テストの考え</description>
    </item>
    <item>
      <title>単体テストの目的・定義・学派・命名について：単体テストの考え方／使い方 第1部</title>
      <link>https://sogo.dev/posts/2023/01/unit-testing-principles-practices-and-patterns-part1</link>
      <guid>https://sogo.dev/posts/2023/01/unit-testing-principles-practices-and-patterns-part1</guid>
      <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
      <description> 『単体テストの考え方／使い方』（Vladimir Khorikov 著、須田智之訳）を読んでいるので、そのまとめを部ごとに書いていこうと思います。

1. 単体テストの目的・定義・学派・命名について：単体テストの考え方／使い方 第1部（この記事）
1. リファクタリングしやすいテストを書こう：単体</description>
    </item>
    <item>
      <title>SQLAlchemyで'MySQL server has gone away'が発生した時の対処法2つ</title>
      <link>https://sogo.dev/posts/2023/01/sqlalchemy-dealing-with-disconnects</link>
      <guid>https://sogo.dev/posts/2023/01/sqlalchemy-dealing-with-disconnects</guid>
      <pubDate>Thu, 12 Jan 2023 00:00:00 GMT</pubDate>
      <description> FastAPI で SQLAlchemy を使っている時に、コンテナを立てた直後は問題ないけど一定時間経過後に DB 接続が切れてしまう問題に遭遇したのでその時に調べたことのメモ。

## 環境

* mysql 5.7.15
* SQLAlchemy 1.4.45
* mysqlclient 2</description>
    </item>
    <item>
      <title>2023年版 キーボードマッピングの個人的メモ</title>
      <link>https://sogo.dev/posts/2023/01/keyboard-remap</link>
      <guid>https://sogo.dev/posts/2023/01/keyboard-remap</guid>
      <pubDate>Sun, 08 Jan 2023 00:00:00 GMT</pubDate>
      <description> 不定期的に「あーでもない、こーでもない」と言ってキーボードのマッピングをいじりだしてしまうことってありますよね。私はあります。限りあるキーの中から自分にとっての最適解を見つける作業はなんだかんだ楽しいです。

今回は 2023 年版、私のキーボードのマッピングを書きとめておこうと思います。

過去</description>
    </item>
    <item>
      <title>プロキシ環境でKubernetes構築（Containerd+Calico）</title>
      <link>https://sogo.dev/posts/2022/12/kubernetes-behind-proxy</link>
      <guid>https://sogo.dev/posts/2022/12/kubernetes-behind-proxy</guid>
      <pubDate>Tue, 27 Dec 2022 00:00:00 GMT</pubDate>
      <description> 同期と一緒にトラシュしたので、プロキシ環境下で kubeadm + Containerd + Calico の Kubernetes クラスターを構築する方法について記録を残します。

## 環境

* Ubuntu 22.04
  * サーバーはニフクラを利用（e-medium4 2vCPU/4</description>
    </item>
    <item>
      <title>Ubuntu 22.04でのKubernetesクラスター構築（ContainerdとSystemdCgroup）</title>
      <link>https://sogo.dev/posts/2022/12/kubernetes-ubuntu22.04-cgroup-systemd</link>
      <guid>https://sogo.dev/posts/2022/12/kubernetes-ubuntu22.04-cgroup-systemd</guid>
      <pubDate>Mon, 26 Dec 2022 00:00:00 GMT</pubDate>
      <description> 公式ドキュメントのコマンドを手順通り流し込めば割と簡単に構築できる Kubernetes クラスターですが、Ubuntu 22.04 になってから少し手を入れる必要が出てきたので差分を紹介しておきます。

**2022-02-16 更新：Kubernetes ドキュメントの日本語版が更新されていた</description>
    </item>
    <item>
      <title>KubernetesでCoreDNSがループしてしまう問題への対処</title>
      <link>https://sogo.dev/posts/2022/12/kubernetes-coredns-loop</link>
      <guid>https://sogo.dev/posts/2022/12/kubernetes-coredns-loop</guid>
      <pubDate>Sat, 24 Dec 2022 00:00:00 GMT</pubDate>
      <description> 1年前にも Kubernetes クラスターを自力で組んでトラブルシューティングしてみる【The Hard Way】の記事の中で軽く解説したネタです。

## 環境

* Ubuntu 22.04
* Kubernetes v1.26.0
* kubeadm v1.26.0

## 問題

Kub</description>
    </item>
    <item>
      <title>VS Code Serverでリモートホストのコンテナ上開発環境に直接アクセスする</title>
      <link>https://sogo.dev/posts/2022/12/vscode-server-devcontainer</link>
      <guid>https://sogo.dev/posts/2022/12/vscode-server-devcontainer</guid>
      <pubDate>Sat, 17 Dec 2022 00:00:00 GMT</pubDate>
      <description> 今回は「ぼくのかんがえたさいきょうのかいはつかんきょう」を紹介したいと思います。

VS Code Server を使い、リモートサーバー上でコンテナとして動かしている開発環境に直接乗り込んでみよう、というアイデアです。

SSH もポート開放も不要なのでとてもお手軽です。

## 環境

サーバ</description>
    </item>
    <item>
      <title>よくあるSPA+API構成でのOpenID Connectクライアント実装</title>
      <link>https://sogo.dev/posts/2022/12/openid-connect-fastapi</link>
      <guid>https://sogo.dev/posts/2022/12/openid-connect-fastapi</guid>
      <pubDate>Fri, 02 Dec 2022 00:00:00 GMT</pubDate>
      <description> この記事はニフクラ等を提供している、富士通クラウドテクノロジーズ Advent Calendar 2022の2日目の記事です。

昨日は @ntoofu さんの パケットキャプチャからKubernetes APIのTLS通信を解析する でした。  
私は TLS な時点でパケットキャプチャを諦めて</description>
    </item>
    <item>
      <title>GitLab CIのrulesとworkflowを理解する</title>
      <link>https://sogo.dev/posts/2022/11/gitlab-rules-workflow</link>
      <guid>https://sogo.dev/posts/2022/11/gitlab-rules-workflow</guid>
      <pubDate>Thu, 17 Nov 2022 00:00:00 GMT</pubDate>
      <description> GitLab CI の rules を使って Dockerfile などの特定のファイルの変更時のみ Docker イメージを作成するパイプラインを回して、それ以外の時には既存の Docker イメージを使用して CI を実行する、という組み方をしたかったのですが、書き方に結構手間取ったのでメモ。</description>
    </item>
    <item>
      <title>Next.jsとTailwind CSSでブログを作るときに考えたこと</title>
      <link>https://sogo.dev/posts/2022/11/blog-with-nextjs-and-tailwindcss</link>
      <guid>https://sogo.dev/posts/2022/11/blog-with-nextjs-and-tailwindcss</guid>
      <pubDate>Sun, 13 Nov 2022 00:00:00 GMT</pubDate>
      <description> このブログは Next.js の SSG（Static Site Generation; 静的サイト生成）機能を使いながら、デザインの大半は Tailwind CSS を使用して整えています。そして生成された HTML, CSS, JS は GitHub Pages でホストさせてもらっています。</description>
    </item>
    <item>
      <title>Hello World!</title>
      <link>https://sogo.dev/posts/2022/10/hello-world</link>
      <guid>https://sogo.dev/posts/2022/10/hello-world</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 GMT</pubDate>
      <description> はじめまして。  
これは初めての投稿です。

今までブログが長く続いたことがないのですが、n度目の正直ということで今回こそは長く続くように頑張りたいと思います（とても固い決意）。

@SogoKato といいます。どんな人か気になってくれた方は 自己紹介ページ をご覧いただければと思います。

</description>
    </item>
  </channel>
</rss>